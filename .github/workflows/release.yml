name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Add GOBIN to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Needed for release notes
          fetch-depth: 0

      - id: get-version
        uses: battila7/get-version-action@v2.2.1

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1

      - name: Install PGP private key
        shell: bash
        env:
          PGP_PRIVATE_KEY: ${{ secrets.PGP_PRIVATE_KEY }}
        run: echo "$PGP_PRIVATE_KEY" | gpg --batch --import

      # - name: Publish Release
      #   shell: bash
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.DEV_TOOLKIT_TOKEN }}
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #     SNAPCRAFT_TOKEN: ${{ secrets.SNAPCRAFT_TOKEN }}
      #     SPLIT_PROD_KEY: ${{ secrets.SPLIT_PROD_KEY }}
      #     SPLIT_STAGING_KEY: ${{ secrets.SPLIT_STAGING_KEY }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: make release-publish

      - uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "dist/currentVersion.txt"
          FILE_DATA: "${{ steps.get-version.outputs.version }}"

      - name: Upload currentVersion.txt to S3
        id: upload-current-version-s3
        uses: ItsKarma/aws-cli@v1.70.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        with:
          args: s3 cp ./dist/currentVersion.txt s3://nr-downloads-main/install/newrelic-cli/currentVersion.txt

      - name: Upload install.sh to S3
        id: upload-install-script-s3
        uses: ItsKarma/aws-cli@v1.70.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        with:
          args: s3 cp ./scripts/install.sh s3://nr-downloads-main/install/newrelic-cli/scripts/install.sh

      - uses: actions/upload-artifact@v2
        with:
          name: windows-binary
          path: dist/newrelic_windows_amd64/newrelic.exe

      - name: Checkout newrelic-forks/homebrew-core
        uses: actions/checkout@v2
        with:
          repository: newrelic-forks/homebrew-core
          path: homebrew-core
          token: ${{ secrets.DEV_TOOLKIT_TOKEN }}

      - name: Create homebrew-core pull request
        shell: bash
        run: ./scripts/brew_formula_pull_request.sh
        env:
          GH_USER_EMAIL: developer-toolkit-team@newrelic.com
          GH_USER_NAME: 'New Relic Developer Toolkit Bot'

      - name: Upload chocolatey package
        shell: bash
        run: make chocolatey-publish
        env:
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}

  release-windows-installer-github:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: get-version
        uses: battila7/get-version-action@v2.2.1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - uses: actions/download-artifact@v2
        with:
          name: windows-binary
          path: .\dist\newrelic_windows_amd64

      - name: Compile installer
        run: msbuild .\build\package\msi\NewRelicCLIInstaller.sln

      - name: Sign installer
        env:
          PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        working-directory: .\build\package\msi\NewRelicCLIInstaller
        run: .\SignMSI.cmd

      - name: Get latest release upload URL
        id: get-latest-release-upload-url
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "::set-output name=upload_url::$(./scripts/get_latest_release_upload_url.sh)"

      - name: Upload Windows installer to GitHub
        id: upload-windows-installer-github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-latest-release-upload-url.outputs.upload_url }}
          asset_path: .\build\package\msi\NewRelicCLIInstaller\bin\x64\Release\NewRelicCLIInstaller.msi
          asset_name: NewRelicCLIInstaller_${{ steps.get-version.outputs.version }}.msi
          asset_content_type: application/octet-stream

      - uses: actions/upload-artifact@v2
        with:
          name: windows-msi
          path: .\build\package\msi\NewRelicCLIInstaller\bin\x64\Release\NewRelicCLIInstaller.msi

  release-windows-installer-s3:
    runs-on: ubuntu-latest
    needs: release-windows-installer-github
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: get-version
        uses: battila7/get-version-action@v2.2.1

      - uses: actions/download-artifact@v2
        with:
          name: windows-msi
          path: ./dist

      - name: Upload Windows installer to S3 (download.newrelic.com)
        id: upload-windows-installer-s3
        uses: ItsKarma/aws-cli@v1.70.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        with:
          args: s3 cp ./dist/NewRelicCLIInstaller.msi s3://nr-downloads-main/install/newrelic-cli/${{ steps.get-version.outputs.version }}/NewRelicCLIInstaller_${{ steps.get-version.outputs.version }}.msi
